//WARNING: MUST use brackets with all infix operators, and space between operator and arguments compulsory 
// e.g. (x & y)  (x overlap y) (z < x) etc...

build_event_term(TENSE)
	make(\/1)
	go(\/1)
	put(ty(cn>es))
	put(fo(x^(eps, x)))
	go(/\1)
	make(\/0)
	go(\/0)
	put(?ty(cn))
	make(\/0)
	go(\/0)
	put(fo(EVENTVAR))
	put(ty(es))
	go(/\0)
	make(\/1)
	go(\/1)
	put(?ty(es>cn))
	make(\/0)
	go(\/0)
	put(ty(es))
	put(fo(R))
	go(/\0)
	make(\/1)
	go(\/1)
	put(ty(es>(es>cn)))
	event_restrictor(TENSE)
	
event_restrictor(past)
	put(fo(x^y^y, (x < now)))

event_restrictor(pres)
	put(fo(x^y^y, (x = now)))

event_restrictor(future)
	put(fo(x^y^y, ((now < x) & (y = x))))

v_intran_content(PRED)
	put(fo(x^y^PRED(y, x)))
	put(!)
	go(/\1)
	go(\/0)	

v_tran_content(PRED)
	make(\/1)
	go(\/1)
	put(fo(z^x^y^PRED(y,x,z)))
	put(ty(e>(e>(es>t))))
	put(!)
	go(/\1)
	make(\/0)
	go(\/0)
	put(?ty(e))

aux_content(will)
	make(\/0)
	go(\/0)
	put(?ty(es))
	build_event_term(future)
	go(</\1/\1/\0/\0>)
	make(\/1)
	go(\/1)
	put(?ty(es>t))
	make(\/0)
	go(\/0)
	put(?ty(e))
	go(/\0)
	make(\/1)
	go(\/1)
	put(ty(e>(es>t)))
	put(?Ex.fo(x))

aux_content(did)
	make(\/0)
	go(\/0)
	put(?ty(es))
	build_event_term(past)
	go(</\1/\1/\0/\0>)
	make(\/1)
	go(\/1)
	put(?ty(es>t))
	make(\/0)
	go(\/0)
	put(?ty(e))
	go(/\0)
	make(\/1)
	go(\/1)
	put(ty(e>(es>t)))
	put(?Ex.fo(x))
	
aux_content(do)
	make(\/0)
	go(\/0)
	put(?ty(es))
	build_event_term(pres)
	go(</\1/\1/\0/\0>)
	make(\/1)
	go(\/1)
	put(?ty(es>t))
	make(\/0)
	go(\/0)
	put(?ty(e))
	go(/\0)
	make(\/1)
	go(\/1)
	put(ty(e>(es>t)))
	put(?Ex.fo(x))
